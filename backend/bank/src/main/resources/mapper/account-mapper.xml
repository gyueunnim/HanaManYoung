<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Account">
    <select id="getAllAccounts" resultType="Account">
        SELECT * FROM ACCOUNT
    </select>
    <select id="getAccountByAccNum" parameterType="String" resultType="Account">
        SELECT * FROM ACCOUNT WHERE ACC_NUM = #{accNum}
    </select>

    <select id="getAccountByID" parameterType="String" resultType="Account">
        SELECT * FROM ACCOUNT WHERE USER_ID = #{user_Id} order by acc_type asc
    </select>

    <insert id="registerAccount" parameterType="Account">
        INSERT INTO ACCOUNT (
            ACC_ID,
            ACC_BALANCE,
            ACC_DATE,
            ACC_NUM,
            ACC_PW,
            ACC_TYPE,
            USER_ID
        ) VALUES (
             ACCOUNT_SEQ.NEXTVAL,
             #{acc_balance},
             #{acc_date},
             #{acc_num},
             #{acc_pw},
             #{acc_type},
             #{acc_user_id}
         )
    </insert>

    <select id="getChallengeAccount" resultType="AccountDTO">
        select * from account where user_id = #{user_id} and acc_type = 'AT_03'
    </select>

    <update id="updateReward" parameterType="RewardRequestDTO">
        UPDATE ACCOUNT SET ACC_BALANCE=ACC_BALANCE+#{acc_t_amount} WHERE USER_ID=#{user_id} AND ACC_TYPE='AT_03'
    </update>

    <select id="getTotalIncome" parameterType="String" resultType="AccountTotalDTO">
        select ACC_NUM, SUM(ACC_T_AMOUNT) total from ACCOUNT_TRANSACTION where ACC_NUM=#{acc_num} AND ACC_T_DATE LIKE #{date} AND ACC_T_AMOUNT &gt; 0 GROUP BY ACC_NUM
    </select>

    <select id="getTotalExpense" parameterType="String" resultType="AccountTotalDTO">
        select ACC_NUM, SUM(ACC_T_AMOUNT) total from ACCOUNT_TRANSACTION where ACC_NUM=#{acc_num} AND ACC_T_DATE LIKE #{date} AND ACC_T_AMOUNT &lt; 0 GROUP BY ACC_NUM
    </select>
    <update id="startSavingAT_01" parameterType="java.util.Map">
        update account set acc_balance=acc_balance-#{amount} where acc_num=(select acc_num from account where user_id=#{user_id} and acc_type='AT_01')
    </update>
    <update id="startSavingAT_02" parameterType="java.util.Map">
        update account set acc_balance=acc_balance+#{amount} where acc_num=(select acc_num from account where user_id=#{user_id} and acc_type='AT_02')
    </update>

    <update id="autoTransferAT_01" parameterType="ChallengeSaving">
        update account set acc_balance = ACC_BALANCE-#{challenge_saving_monthly_amount} where acc_type='AT_01' and user_id=#{user_id};
    </update>
    <update id="autoTransferAT_02" parameterType="ChallengeSaving">
        update account set acc_balance = ACC_BALANCE+#{challenge_saving_monthly_amount} where acc_type='AT_02' and user_id=#{user_id};
    </update>

    <select id="getAccountByUserID" parameterType="String" resultType="AccountDTO">
        select * from account where user_id=#{user_id} and acc_type='AT_01'
    </select>

    <update id="sendPocketMoney" parameterType="java.util.Map">
        update account set acc_balance=acc_balance-#{amount} where user_id=#{send_user} and acc_type='AT_01'
    </update>
    <update id="receivePocketMoney" parameterType="java.util.Map">
        update account set acc_balance=acc_balance+#{amount} where user_id=#{receive_user} and acc_type='AT_01'
    </update>

    <update id="sendMoney" parameterType="SendMoneyDTO">
        update account set acc_balance=acc_balance-#{amount} where user_id=#{sendId} and acc_type='AT_01'
    </update>
    <update id="receiveMoney" parameterType="SendMoneyDTO">
        update account set acc_balance=acc_balance+#{amount} where user_id=#{targetId} and acc_type='AT_01'
    </update>
</mapper>